<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">

<configuration>
    <!--
    在配置文件中的位置必须符合要求，否则会报错，顺序如下:
    properties?, settings?,
    typeAliases?, typeHandlers?,
    objectFactory?,objectWrapperFactory?,
    plugins?,
    environments?, databaseIdProvider?, mappers?
     -->
    <!--配置全局属性-->
    <settings>
        <!--使用jdbc的getGeneratekeys获取自增主键值-->
        <setting name="useGeneratedKeys" value="false"/>
        <!--使用列别名替换别名　　默认true -->
        <!--select name as title form table;-->
        <setting name="useColumnLabel" value="true"/>
        <!--开启驼峰命名转换Table:create_time到 Entity(createTime)-->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
        <!--二级缓存-->
        <setting name="cacheEnabled" value="false" />
        <!-- 打印sql语句到控制台 -->
        <setting name="logImpl" value="STDOUT_LOGGING" />
        <setting name="logPrefix" value="dao."/>
    </settings>

	
    <plugins>
        <!-- com.github.pagehelper为PageHelper类所在包名 -->
        <plugin interceptor="com.github.pagehelper.PageInterceptor">
            <!-- 4.0.0以后版本可以不设置该参数 -->
            <!--  <property name="dialect" value="oracle"/>  -->
            <!-- 该参数默认为false -->
            <!-- 设置为true时，会将RowBounds第一个参数offset当成pageNum页码使用 -->
            <!-- 和startPage中的pageNum效果一样-->
            <property name="offsetAsPageNum" value="true"/>
            <!-- 该参数默认为false -->
            <!-- 设置为true时，使用RowBounds分页会进行count查询 -->
            <property name="rowBoundsWithCount" value="true"/>
            <!-- 设置为true时，如果pageSize=0或者RowBounds.limit = 0就会查询出全部的结果 -->
            <!-- （相当于没有执行分页查询，但是返回结果仍然是Page类型）-->
            <property name="pageSizeZero" value="false"/>
            <!-- 支持通过Mapper接口参数来传递分页参数 -->
            <property name="supportMethodsArguments" value="true"/>
            <!-- always总是返回PageInfo类型,check检查返回类型是否为PageInfo,none返回Page -->
            <property name="returnPageInfo" value="none"/>
        </plugin>
        <!-- 关于Id自动生成(snowflake的插件) 和  乐观锁插件  建议在业务service层实现  -->
        <!-- ①snowflake的interceptor有时候需要返回生成的ID(默认插入条数),由于Mybatis后续会对插入条数验证,所以暂时没有找出方法实现 -->
        <!-- ②乐观锁建议业务Mapping上显式实现(注意条件WHERE xxx ANDversion = ? )方便调试 
        <plugin interceptor="com.wisdom.plugin.mybatis.jdbcType.JdbcTypeInterceptor"></plugin>
        <plugin interceptor="com.wisdom.plugin.mybatis.performance.PerformanceInterceptor"></plugin>
        -->
    </plugins>

</configuration>
